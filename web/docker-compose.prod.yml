# docker-compose.prod.yml - FINAL & CORRECTED

version: '3.8'

services:
  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports: ["80:80", "443:443"]
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on: [frontend, backend]
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}

  frontend:
    build: ./frontend
    restart: unless-stopped
    expose: [3000]
    environment:
      - NODE_ENV=production
      # FIX: Pass the public API URL to the frontend so it knows where to send requests.
      # The value comes from the .env file variable 'DOMAIN_NAME'.
      - NEXT_PUBLIC_API_URL=https://api.${DOMAIN_NAME}

  backend:
    build: ./backend
    restart: unless-stopped
    expose: [3001]
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET}
      - PROVISIONING_API_KEY=${PROVISIONING_API_KEY}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: timescale/timescaledb:latest-pg16
    restart: unless-stopped
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydb
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  caddy_data:
  caddy_config:
  db_data: